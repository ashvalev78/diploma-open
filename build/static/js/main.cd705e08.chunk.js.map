{"version":3,"sources":["store/reducers.js","store/actions.js","common/constants/colors.js","pages/Authorization/Auth.jsx","pages/Builder/components/LeftSidebar/ElementsSidebar.jsx","pages/Builder/components/LeftSidebar/MainSidebar.jsx","pages/Builder/components/TopSidebar/TopSidebar.jsx","common/components/Header/Header.jsx","pages/Builder/Builder.jsx","pages/Profile/Profile.jsx","App.js","serviceWorker.js","index.js"],"names":["reducers","state","currentProjectId","projects","accessToken","history","action","type","username","currentProject","signIn","setHistory","main","icons","Container","styled","div","FormContainer","Name","span","connect","store","dispatch","React","useState","login","setLogin","password","setPassword","validation","setValidation","useHistory","useEffect","push","validate","length","prevState","FormControl","error","Input","placeholder","style","marginBottom","value","onChange","e","currentTarget","required","FormHelperText","display","ButtonGroup","color","aria-label","variant","Button","backgroundColor","colors","width","onClick","body","JSON","stringify","fetch","method","headers","then","response","a","json","data","flex","console","log","Wrapper","Item","items","clickAction","selectedItem","isMain","isActive","map","item","id","key","isSelected","tag","icon","name","LeftBlockWrapper","ItemContent","AdditionalBlockWrapper","selectedTopbarOption","layerClick","undoClick","redoClick","deleteClick","changeMode","cursor","additionalBlock","h1","initials","BuilderContainer","Workspace","WorkArea","WorkAreaWrapper","MainPart","ImgPopup","img","isVisible","PopupWrapper","iconSizes","height","CATEGORIES","OPTIONS","image","HTMLTag","text","figure","Square","textarea","Circle","EDITING_OPTIONS","resizable","scalable","warpable","FontSizePicker","FontSizeInput","input","workAreaRef","setWorkAreaRef","target","setTarget","targetId","setTargetId","selectedOption","setSelectedOption","setSelectedTopbarOption","elementsTree","setTree","selectedEditingOption","setSelectedEditingOption","isPopupVisible","setPopupVisibility","isImgPopupVisible","setImgPopupVisibility","imgPopupSrc","setImgPopupSrc","fileInput","currentZIndex","setCurrentZIndex","currentHistoryIndex","setCurrentHistoryIndex","setElementsTree","tree","setHisto","localStorage","setItem","slice","parse","TOP_SIDEBAR_OPTIONS","marginRight","onChangeComplete","hex","fontSize","getItem","addStyleToElementInTree","newTree","forEach","el","getElementStyles","transform","zIndex","mode","src","alt","Header","TopSidebar","element","direction","filter","deleteElement","MainSidebar","option","setTimeout","html2canvas","canvas","toDataURL","ElementsSidebar","callback","newElement","uuidv4","matrix","ref","html","r","onchange","file","files","reader","FileReader","readAsDataURL","onload","readerEvent","content","result","click","focus","container","origin","edge","draggable","throttleDrag","onDrag","beforeDelta","beforeDist","left","top","right","bottom","delta","dist","clientX","clientY","onDragEnd","isDrag","keepRatio","throttleResize","onResizeStart","onResize","onResizeEnd","throttleScale","onScale","scale","onScaleEnd","rotatable","throttleRotate","onRotate","onRotateEnd","onWarp","multiply","find","join","onWarpEnd","pinchable","onPinchEnd","datas","defaultValue","ProjectsContainer","ProjectBlock","AddProjectButton","Popup","popup","setPopup","projectName","setProjectName","project","setCurrentProject","projectId","_id","createStore","App","forceRefresh","path","exact","Auth","Builder","Profile","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.cd705e08.chunk.js","sourcesContent":["const reducers = (state = {\r\n  currentProjectId: '',\r\n  projects: [],\r\n  accessToken: '',\r\n  history: [],\r\n}, action) => {\r\n  switch(action.type) {\r\n    case \"SIGN_IN\": {\r\n      return {\r\n        ...state,\r\n        accessToken: action.accessToken,\r\n        username: action.username\r\n      };\r\n    }\r\n    case \"SET_CURRENT_PROJECT\": {\r\n      return {\r\n        ...state,\r\n        currentProject: action.currentProject\r\n      }\r\n    }\r\n    case \"SET_PROJECTS\": {\r\n      return {\r\n        ...state,\r\n        projects: action.projects\r\n      }\r\n    }\r\n    case \"SET_HISTORY\": {\r\n      return {\r\n        ...state,\r\n        history: action.history\r\n      }\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n\r\nexport default reducers;","export const signIn = (type, accessToken, username) => {\r\n  return {\r\n    type,\r\n    accessToken,\r\n    username\r\n  };\r\n};\r\n\r\nexport const setCurrentProject = (type, projectId) => {\r\n  return {\r\n    type,\r\n    currentProjectId: projectId\r\n  }\r\n}\r\n\r\nexport const setProjects = (type, projects) => {\r\n  return {\r\n    type,\r\n    projects\r\n  }\r\n}\r\n\r\nexport const setHistory = (type, history) => {\r\n  return {\r\n    type,\r\n    history\r\n  }\r\n}","export const main = '#207ea9';\r\nexport const secondary = '#7485BE';\r\nexport const third = '#4CAEDB';\r\nexport const fourth = '#4968D3';\r\nexport const icons = 'white';\r\nexport const black = '#00171F';\r\nexport const background = '#FFFFFF';\r\nexport const gray = '#B7C8D7';","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  Input,\r\n  ButtonGroup,\r\n  FormControl,\r\n  FormHelperText,\r\n} from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport { signIn } from \"../../store/actions\";\r\n\r\nimport * as colors from \"../../common/constants/colors\";\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  height: 100vh;\r\n  display: flex;\r\n  flex-flow: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: ${colors.background};\r\n`;\r\n\r\nconst FormContainer = styled.div`\r\n  display: flex;\r\n  flex-flow: column;\r\n  width: 350px;\r\n  padding: 10px;\r\n`;\r\n\r\nconst Name = styled.span`\r\n  font-size: 24px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst mapStateToProps = (state) => ({\r\n  store: state,\r\n});\r\n\r\nexport default connect(mapStateToProps)(({ store, dispatch }) => {\r\n  const [login, setLogin] = React.useState(\"\");\r\n  const [password, setPassword] = React.useState(\"\");\r\n  const [validation, setValidation] = React.useState({\r\n    login: false,\r\n    password: false,\r\n  });\r\n  let history = useHistory();\r\n\r\n  React.useEffect(() => {\r\n    if (store.accessToken) {\r\n      history.push(\"/profile\");\r\n    }\r\n  }, []);\r\n\r\n  const validate = () => {\r\n    if (login.length < 5) {\r\n      setValidation((prevState) => ({\r\n        ...prevState,\r\n        login: true,\r\n      }));\r\n    } else {\r\n      setValidation((prevState) => ({\r\n        ...prevState,\r\n        login: false,\r\n      }));\r\n    }\r\n    if (password.length < 5) {\r\n      setValidation((prevState) => ({\r\n        ...prevState,\r\n        password: true,\r\n      }));\r\n    } else {\r\n      setValidation((prevState) => ({\r\n        ...prevState,\r\n        password: false,\r\n      }));\r\n    }\r\n  };\r\n\r\n  const authorize = () => {\r\n    validate();\r\n    if (login.length > 5 && password.length > 5) {\r\n      const body = JSON.stringify({\r\n        username: login,\r\n        password,\r\n      });\r\n      fetch(\"http://localhost:8080/api/auth/signin\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json;charset=utf-8\",\r\n        },\r\n        body,\r\n      }).then(async (response) => {\r\n        let data = await response.json()\r\n        if (data.accessToken) {\r\n          dispatch(signIn(\"SIGN_IN\", data.accessToken, data.username));\r\n          history.push(\"/profile\");\r\n        } else {\r\n          dispatch(signIn(\"SIGN_IN\", \"\"));\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const signUp = () => {\r\n    validate();\r\n    if (login.length > 5 && password.length > 5) {\r\n      const body = JSON.stringify({\r\n        username: login,\r\n        password,\r\n      });\r\n      fetch(\"http://localhost:8080/api/auth/signup\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json;charset=utf-8\",\r\n        },\r\n        body,\r\n      }).then(async (response) => {\r\n        let data = await response.json()\r\n        console.log(data);\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <FormContainer>\r\n        <Name>Редактор</Name>\r\n        <FormControl error={validation.login}>\r\n          <Input\r\n            placeholder=\"Login\"\r\n            style={{ marginBottom: \"15px\" }}\r\n            value={login}\r\n            onChange={(e) => setLogin(e.currentTarget.value)}\r\n            required\r\n          />\r\n          <FormHelperText\r\n            style={{ display: validation.login ? \"flex\" : \"none\" }}\r\n          >\r\n            Логин должен содержать минимум 6 символов\r\n          </FormHelperText>\r\n        </FormControl>\r\n        <FormControl error={validation.password}>\r\n          <Input\r\n            placeholder=\"Password\"\r\n            type=\"password\"\r\n            style={{ marginBottom: \"15px\" }}\r\n            value={password}\r\n            onChange={(e) => setPassword(e.currentTarget.value)}\r\n            required\r\n          />\r\n          <FormHelperText\r\n            style={{ display: validation.password ? \"flex\" : \"none\" }}\r\n          >\r\n            Пароль должен содержать минимум от 6 символов\r\n          </FormHelperText>\r\n        </FormControl>\r\n        <ButtonGroup\r\n          color=\"primary\"\r\n          aria-label=\"outlined primary button group\"\r\n          variant=\"contained\"\r\n        >\r\n          <Button\r\n            variant=\"contained\"\r\n            style={{\r\n              backgroundColor: colors.main,\r\n              color: \"white\",\r\n              width: \"120px\",\r\n            }}\r\n            onClick={authorize}\r\n          >\r\n            Войти\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            style={{ backgroundColor: colors.main, flex: 1 }}\r\n            onClick={signUp}\r\n          >\r\n            Зарегистрироваться\r\n          </Button>\r\n        </ButtonGroup>\r\n      </FormContainer>\r\n    </Container>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport * as colors from \"../../../../common/constants/colors\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-flow: column;\r\n  align-items: center;\r\n  width: 190px;\r\n  background-color: ${colors.main};\r\n  border-right: 1px solid black;\r\n`;\r\n\r\nconst Item = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n  height: 70px;\r\n  width: 100%;\r\n  cursor: pointer;\r\n  font-size: 16px;\r\n  color: white;\r\n  font-weight: 600;\r\n  border-bottom: 1px solid black;\r\n  border-left: 1px solid black;\r\n\r\n  &:hover {\r\n    background-color: ${colors.third};\r\n  }\r\n`;\r\n\r\nexport default ({ items, clickAction, selectedItem, isMain, isActive}) => {\r\n  return (\r\n    <Wrapper isMain={isMain}>\r\n      {items?.map((item, id) => {\r\n        return (\r\n          <Item\r\n            onClick={() => clickAction(item)}\r\n            key={id}\r\n            isMain={isMain}\r\n            isSelected={selectedItem?.tag === item?.tag}\r\n            isActive={isActive}\r\n          >\r\n            {item?.icon}\r\n            {item.name}\r\n          </Item>\r\n        );\r\n      })}\r\n    </Wrapper>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport * as colors from \"../../../../common/constants/colors\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-flow: column;\r\n  align-items: center;\r\n  width: ${({isMain}) => isMain ? '80px' : '190px'};\r\n  background-color: 'white';\r\n`;\r\n\r\nconst Item = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n  height: 70px;\r\n  width: 100%;\r\n  /* margin-bottom: 5px; */\r\n  cursor: pointer;\r\n  font-size: 16px;\r\n  color: ${colors.main};\r\n  font-weight: 600;\r\n  border-bottom: 1px solid black;\r\n  border-left: 1px solid black;\r\n  background-color: 'white';\r\n  ${({isSelected}) =>\r\n    (isSelected ? `color: white; background-color: ${colors.main}` : '')\r\n  };\r\n\r\n  &:hover {\r\n    background-color: ${colors.main};\r\n    color: white;\r\n  }\r\n`;\r\n\r\nexport default ({ items, clickAction, selectedItem, isMain, isActive}) => {\r\n  return (\r\n    <Wrapper isMain={isMain}>\r\n      {items?.map((item, id) => {\r\n        return (\r\n          <Item\r\n            onClick={() => clickAction(item)}\r\n            key={id}\r\n            isMain={isMain}\r\n            isSelected={selectedItem?.tag === item?.tag}\r\n            isActive={isActive}\r\n          >\r\n            {item?.icon}\r\n            {item.name}\r\n          </Item>\r\n        );\r\n      })}\r\n    </Wrapper>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport UndoIcon from \"@material-ui/icons/Undo\";\r\nimport RedoIcon from \"@material-ui/icons/Redo\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nimport * as colors from \"../../../../common/constants/colors\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  height: 50px;\r\n  width: 100%;\r\n  background-color: ${colors.gray};\r\n  box-shadow: 0 0 10px ${colors.main};\r\n`;\r\n\r\nconst LeftBlockWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  min-width: 190px;\r\n`;\r\n\r\nconst Item = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  position: relative;\r\n  height: 35px;\r\n  width: 100%;\r\n  cursor: pointer;\r\n  font-size: 16px;\r\n  color: white;\r\n  background-color: ${colors.third};\r\n  border-radius: 5px;\r\n  margin-left: 10px;\r\n\r\n  &:hover {\r\n    background-color: ${colors.main}\r\n  }\r\n`;\r\n\r\nconst ItemContent = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nconst AdditionalBlockWrapper = styled.div`\r\n  position: absolute;\r\n  z-index: 10000;\r\n  display: ${({selectedTopbarOption, name}) => (selectedTopbarOption === name ? \"block\" : \"none\")};\r\n  top: 100%;\r\n  left: 50%;\r\n  transform: translate(-50%, 0);\r\n`;\r\n\r\nexport default ({ items, clickAction, selectedTopbarOption, layerClick, undoClick, redoClick, changeMode, deleteClick}) => {\r\n  return (\r\n    <Wrapper>\r\n      <LeftBlockWrapper>\r\n        <UndoIcon onClick={undoClick} style={{cursor: 'pointer', color: colors.icons}}/>\r\n        <RedoIcon onClick={redoClick} style={{cursor: 'pointer', color: colors.icons}}/>\r\n        <ExpandMoreIcon onClick={() => layerClick(\"down\")} style={{cursor: 'pointer', color: colors.icons}}/>\r\n        <ExpandLessIcon onClick={() => layerClick(\"up\")} style={{cursor: 'pointer', color: colors.icons}}/>\r\n        <DeleteIcon onClick={deleteClick} style={{cursor: 'pointer', color: colors.icons}}/>\r\n      </LeftBlockWrapper>\r\n      {items?.map((item, id) => {\r\n        return (\r\n          <Item key={id}>\r\n            <ItemContent onClick={() => clickAction(item)}>\r\n              {item?.icon}\r\n              <span>{item.name}</span>\r\n            </ItemContent>\r\n            <AdditionalBlockWrapper name={item.name} selectedTopbarOption={selectedTopbarOption}>\r\n              {item?.additionalBlock}\r\n            </AdditionalBlockWrapper>\r\n          </Item>\r\n        );\r\n      })}\r\n    </Wrapper>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport { Avatar } from '@material-ui/core';\r\n\r\nimport * as colors from '../../constants/colors';\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 10px 20px;\r\n  background-color: ${colors.main};\r\n  color: white;\r\n`;\r\n\r\nconst Name = styled.h1`\r\n  font-size: 32px;\r\n  margin: 0;\r\n`;\r\n\r\nexport default ({name, initials}) => {\r\n  return (\r\n    <Wrapper>\r\n      {/* <ExitToAppIcon /> */}\r\n      <Name>{name || \"Название проекта\"}</Name>\r\n      {/* <Avatar>{initials || \"\"}</Avatar> */}\r\n    </Wrapper>\r\n  );\r\n}","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Moveable from \"react-moveable\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport ColorLensIcon from \"@material-ui/icons/ColorLens\";\r\nimport TitleIcon from \"@material-ui/icons/Title\";\r\nimport FormatColorFillIcon from \"@material-ui/icons/FormatColorFill\";\r\nimport ZoomOutMapIcon from \"@material-ui/icons/ZoomOutMap\";\r\nimport AspectRatioIcon from \"@material-ui/icons/AspectRatio\";\r\nimport PhotoIcon from '@material-ui/icons/Photo';\r\nimport TextFieldsIcon from '@material-ui/icons/TextFields';\r\nimport ViewModuleIcon from '@material-ui/icons/ViewModule';\r\nimport PhotoCameraIcon from '@material-ui/icons/PhotoCamera';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport { BlockPicker } from \"react-color\";\r\nimport html2canvas from \"html2canvas\";\r\n\r\nimport * as colors from \"../../common/constants/colors\";\r\n\r\nimport ElementsSidebar from \"./components/LeftSidebar/ElementsSidebar\";\r\nimport MainSidebar from \"./components/LeftSidebar/MainSidebar\";\r\nimport TopSidebar from \"./components/TopSidebar/TopSidebar\";\r\nimport Header from \"../../common/components/Header/Header\";\r\n\r\nimport { setHistory } from \"../../store/actions\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-flow: column;\r\n  width: 100%;\r\n  height: 100vh;\r\n`;\r\n\r\nconst BuilderContainer = styled.div`\r\n  display: flex;\r\n  flex-flow: column;\r\n  flex: 1;\r\n`;\r\n\r\nconst Workspace = styled.div`\r\n  display: flex;\r\n  flex-flow: column;\r\n  flex: 1;\r\n`;\r\n\r\nconst WorkArea = styled.div`\r\n  display: flex;\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n  border: 1px solid ${colors.secondary};\r\n`;\r\n\r\nconst WorkAreaWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nconst MainPart = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  flex: 1;\r\n`;\r\n\r\nconst ImgPopup = styled.img`\r\n  display: flex;\r\n  position: fixed;\r\n  z-index: 10000;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  ${({ isVisible }) => (isVisible ? \"\" : \"display: none;\")}\r\n`;\r\n\r\nconst PopupWrapper = styled.div`\r\n  background-color: gray;\r\n  position: fixed;\r\n  opacity: 0.9;\r\n  width: 100%;\r\n  height: 100%;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  z-index: 9999;\r\n  ${({ isVisible }) => (isVisible ? \"\" : \"display: none;\")}\r\n`;\r\n\r\nconst iconSizes = {\r\n  width: '48px',\r\n  height: '48px'\r\n};\r\n\r\nconst CATEGORIES = [\r\n  { tag: \"image\", icon: <PhotoIcon style={iconSizes} />},\r\n  { tag: \"text\", icon: <TextFieldsIcon style={iconSizes} /> },\r\n  { tag: \"figure\", icon: <ViewModuleIcon style={iconSizes} /> },\r\n  { tag: \"showImg\",icon: <PhotoCameraIcon style={iconSizes} /> },\r\n  { tag: \"save\", icon: <SaveIcon style={iconSizes} /> },\r\n];\r\n\r\nconst OPTIONS = {\r\n  image: [\r\n    {\r\n      name: \"Загрузить изображение\",\r\n      HTMLTag: \"img\",\r\n    },\r\n  ],\r\n  text: [\r\n    {\r\n      name: \"Вставить текст\",\r\n      HTMLTag: \"input\",\r\n    },\r\n  ],\r\n  figure: [\r\n    {\r\n      name: \"Квадрат\",\r\n      HTMLTag: \"div-square\",\r\n    },\r\n    {\r\n      name: \"Круг\",\r\n      HTMLTag: \"div-circle\",\r\n    },\r\n  ],\r\n};\r\n\r\nconst Square = styled.div`\r\n  width: 50px;\r\n  height: 50px;\r\n  top: 0;\r\n  left: 0;\r\n  border: 1px solid black;\r\n  position: absolute;\r\n`;\r\n\r\nconst Input = styled.textarea`\r\n  width: 50px;\r\n  height: 20px;\r\n  top: 0;\r\n  left: 0;\r\n  border: none;\r\n  position: absolute;\r\n  outline: none;\r\n  resize: none;\r\n  overflow: hidden;\r\n  background-color: inherit;\r\n`;\r\n\r\nconst Circle = styled(Square)`\r\n  border-radius: 50%;\r\n`;\r\n\r\n// const Image = styled.div`\r\n//   width: 50px;\r\n//   height: 50px;\r\n//   position: absolute;\r\n// `;\r\n\r\nconst EDITING_OPTIONS = {\r\n  resizable: {\r\n    resizable: true,\r\n    scalable: false,\r\n    warpable: false,\r\n  },\r\n  scalable: {\r\n    resizable: false,\r\n    scalable: true,\r\n    warpable: false,\r\n  },\r\n  warpable: {\r\n    resizable: false,\r\n    scalable: false,\r\n    warpable: true,\r\n  },\r\n};\r\n\r\nconst FontSizePicker = styled.div`\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst FontSizeInput = styled.input`\r\n  border: 1px solid ${colors.main};\r\n  border-radius: 5px;\r\n  width: 100%;\r\n  height: 25px;\r\n  padding: 5px 3px;\r\n`;\r\n\r\nconst mapStateToProps = state => ({\r\n  store: state,\r\n})\r\n\r\nexport default connect(mapStateToProps)(({dispatch, store}) => {\r\n  const [workAreaRef, setWorkAreaRef] = React.useState(null);\r\n  const [target, setTarget] = React.useState(null);\r\n  const [targetId, setTargetId] = React.useState(null);\r\n  const [selectedOption, setSelectedOption] = React.useState(CATEGORIES[0]);\r\n  const [selectedTopbarOption, setSelectedTopbarOption] = React.useState(null);\r\n  const [elementsTree, setTree] = React.useState([]);\r\n  const [selectedEditingOption, setSelectedEditingOption] = React.useState(\r\n    EDITING_OPTIONS.resizable\r\n  );\r\n  const [isPopupVisible, setPopupVisibility] = React.useState(false);\r\n  const [isImgPopupVisible, setImgPopupVisibility] = React.useState(false);\r\n  const [imgPopupSrc, setImgPopupSrc] = React.useState(\"\");\r\n  let fileInput = null;\r\n  const [currentZIndex, setCurrentZIndex] = React.useState(1000);\r\n  const [currentHistoryIndex, setCurrentHistoryIndex] = React.useState(0);\r\n\r\n  const setElementsTree = (tree, setHisto = false) => {\r\n    localStorage.setItem(\"ElementsTree\", JSON.stringify(tree));\r\n    if (setHisto) {\r\n      if (store.history.length > currentHistoryIndex) {\r\n        dispatch(setHistory(\"SET_HISTORY\", [...store.history.slice(0, currentHistoryIndex + 1), JSON.parse(JSON.stringify(elementsTree))]));\r\n        setCurrentHistoryIndex(currentHistoryIndex + 1);\r\n      } else {\r\n        dispatch(setHistory(\"SET_HISTORY\", [...store.history, JSON.parse(JSON.stringify(elementsTree))]));\r\n        setCurrentHistoryIndex(store.history.length + 1);\r\n      }\r\n    }\r\n    setTree(tree);\r\n  };\r\n\r\n  const TOP_SIDEBAR_OPTIONS = [\r\n    {\r\n      name: \"Цвет\",\r\n      icon: (\r\n        <ColorLensIcon style={{ color: colors.icons, marginRight: \"10px\" }} />\r\n      ),\r\n      additionalBlock: (\r\n        <BlockPicker\r\n          onChangeComplete={(color) => {\r\n            if (target) {\r\n              target.style.color = color.hex;\r\n            }\r\n          }}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      name: \"Шрифт\",\r\n      icon: <TitleIcon style={{ color: colors.icons, marginRight: \"10px\" }} />,\r\n      additionalBlock: (\r\n        <FontSizePicker>\r\n          <FontSizeInput onChange={(e) => {\r\n            if (target) {\r\n              target.style.fontSize = `${e.currentTarget.value}px`;\r\n            }\r\n          }} />\r\n        </FontSizePicker>\r\n      )\r\n    },\r\n    {\r\n      name: \"Заливка\",\r\n      icon: (\r\n        <FormatColorFillIcon\r\n          style={{ color: colors.icons, marginRight: \"10px\" }}\r\n        />\r\n      ),\r\n      additionalBlock: (\r\n        <BlockPicker\r\n          onChangeComplete={(color) => {\r\n            if (target) {\r\n              target.style.backgroundColor = color.hex;\r\n            }\r\n          }}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      name: \"Изменение перспективы\",\r\n      icon: (\r\n        <ZoomOutMapIcon style={{ color: colors.icons, marginRight: \"10px\" }} />\r\n      ),\r\n    },\r\n    {\r\n      name: \"Изменение размера\",\r\n      icon: (\r\n        <AspectRatioIcon style={{ color: colors.icons, marginRight: \"10px\" }} />\r\n      ),\r\n    },\r\n  ];\r\n\r\n  React.useEffect(() => {\r\n    let tree = JSON.parse(localStorage.getItem(\"ElementsTree\"));\r\n    console.log(tree);\r\n    if (tree) {\r\n      setTree(tree);\r\n    }\r\n  }, []);\r\n\r\n  const openFileDialog = (callback) => {\r\n    fileInput.onchange = (e) => {\r\n      const file = e.target.files[0];\r\n\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n\r\n      reader.onload = (readerEvent) => {\r\n        const content = readerEvent.target.result;\r\n        callback(content);\r\n      };\r\n    };\r\n    fileInput.click();\r\n  };\r\n\r\n  const deleteElement = (el) => {\r\n    if (el) {\r\n      const newTree = elementsTree.filter(e => e.id !== el.id);\r\n      setTarget(null);\r\n      setElementsTree(newTree, true);\r\n    }\r\n  }\r\n\r\n  const handleCreateElement = (element) => {\r\n    const newElement = { ...element };\r\n    switch (element.HTMLTag) {\r\n      case \"img\": {\r\n        openFileDialog((src) => {\r\n          let id = uuidv4();\r\n          newElement.id = id;\r\n          newElement.matrix = [\r\n            1, 0, 0, 0,\r\n            0, 1, 0, 0,\r\n            0, 0, 1, 0,\r\n            0, 0, 0, 1,\r\n          ];\r\n          let ref = null;\r\n          newElement.src = src;\r\n          newElement.html = (\r\n            <img\r\n              src={src}\r\n              key={id}\r\n              id={id}\r\n              // style={{backgroundImage: src}}\r\n              alt=\"userFile\"\r\n              style={{zIndex: currentZIndex}}\r\n              ref={r => {\r\n                ref = r;\r\n                setTimeout(() => setTarget(r), 100);\r\n              }}\r\n              onClick={() => {\r\n                setTarget(ref);\r\n                setTargetId(id);\r\n              }}\r\n            />\r\n          );\r\n          setElementsTree([...elementsTree, newElement], true);\r\n        });\r\n        break;\r\n      }\r\n      case \"input\": {\r\n        let id = uuidv4();\r\n        newElement.id = id;\r\n        newElement.matrix = [\r\n          1, 0, 0, 0,\r\n          0, 1, 0, 0,\r\n          0, 0, 1, 0,\r\n          0, 0, 0, 1,\r\n        ];\r\n        let ref = null;\r\n        newElement.html = (\r\n          <Input\r\n            key={id}\r\n            id={id}\r\n            ref={(r) => {\r\n              ref = r;\r\n              setTarget(r);\r\n            }}\r\n            style={{zIndex: currentZIndex}}\r\n            onClick={() => {\r\n              setTarget(ref);\r\n              setTargetId(id);\r\n              ref.focus();\r\n            }}\r\n          />\r\n        );\r\n        setElementsTree([...elementsTree, newElement], true);\r\n        break;\r\n      }\r\n      case \"div-square\": {\r\n        let id = uuidv4();\r\n        newElement.id = id;\r\n        newElement.matrix = [\r\n          1, 0, 0, 0,\r\n          0, 1, 0, 0,\r\n          0, 0, 1, 0,\r\n          0, 0, 0, 1,\r\n        ];\r\n        let ref = null;\r\n        newElement.html = (\r\n          <Square\r\n            key={id}\r\n            id={id}\r\n            ref={(r) => {\r\n              ref = r;\r\n              setTarget(r);\r\n            }}\r\n            style={{zIndex: currentZIndex}}\r\n            onClick={() => {\r\n              setTarget(ref);\r\n              setTargetId(id);\r\n            }}\r\n          />\r\n        );\r\n        setElementsTree([...elementsTree, newElement], true);\r\n        break;\r\n      }\r\n      case \"div-circle\": {\r\n        let id = uuidv4();\r\n        newElement.id = id;\r\n        newElement.matrix = [\r\n          1, 0, 0, 0,\r\n          0, 1, 0, 0,\r\n          0, 0, 1, 0,\r\n          0, 0, 0, 1,\r\n        ];\r\n        let ref = null;\r\n        newElement.html = (\r\n          <Circle\r\n            key={id}\r\n            id={id}\r\n            ref={(r) => {\r\n              ref = r;\r\n              setTarget(r);\r\n            }}\r\n            style={{zIndex: currentZIndex}}\r\n            onClick={() => {\r\n              setTarget(ref);\r\n              setTargetId(id);\r\n            }}\r\n          />\r\n        );\r\n        setElementsTree([...elementsTree, newElement], true);\r\n        break;\r\n      }\r\n      default:\r\n        break;\r\n    }\r\n    setCurrentZIndex(currentZIndex + 1);\r\n  };\r\n\r\n  const handleOptionClick = (option) => {\r\n    switch (option.tag) {\r\n      case \"save\": {\r\n        break;\r\n      }\r\n      case \"showImg\": {\r\n        setTarget(null);\r\n        setTimeout(\r\n          () =>\r\n            html2canvas(workAreaRef).then((canvas) => {\r\n              setImgPopupSrc(canvas.toDataURL(\"image/png\"));\r\n              setPopupVisibility(true);\r\n              setImgPopupVisibility(true);\r\n            }),\r\n          100\r\n        );\r\n        break;\r\n      }\r\n      default: {\r\n        setSelectedOption(option);\r\n        break;\r\n      }\r\n    }\r\n  };\r\n\r\n  const addStyleToElementInTree = (target) => {\r\n    if (target) {\r\n      const newTree = [...elementsTree];\r\n      newTree.forEach((el) => {\r\n        if (el.id === targetId) {\r\n          el.style = getElementStyles(target);\r\n          el.value = target.value;\r\n          // el.matrix = target.matrix;\r\n        }\r\n      });\r\n      setElementsTree(newTree, true);\r\n    }\r\n  };\r\n\r\n  const getElementStyles = (el) => {\r\n    if (el) {\r\n      const stylesObject = {\r\n        width: el.style.width,\r\n        height: el.style.height,\r\n        transform: el.style.transform,\r\n        backgroundColor: el.style.backgroundColor,\r\n        color: el.style.color,\r\n        fontSize: el.style.fontSize,\r\n        zIndex: el.style.zIndex,\r\n      };\r\n\r\n      return stylesObject;\r\n    }\r\n  };\r\n\r\n  const handleTopbarOptions = (element) => {\r\n    if (element) {\r\n      setSelectedTopbarOption(\r\n        element.name === selectedTopbarOption ? null : element.name\r\n      );\r\n      if (element.name === 'Изменение размера') {\r\n        changeMode('resizable');\r\n      }\r\n      if (element.name === 'Изменение перспективы') {\r\n        changeMode('warpable');\r\n      }\r\n    }\r\n  };\r\n\r\n  const layerClick = (direction) => {\r\n    if (target) {\r\n      switch(direction) {\r\n        case \"up\": {\r\n          target.style.zIndex = +target.style.zIndex + 1;\r\n          break;\r\n        }\r\n        case \"down\": {\r\n          target.style.zIndex = +target.style.zIndex - 1;\r\n          break;\r\n        }\r\n        default: break;\r\n      }\r\n    }\r\n  }\r\n\r\n  const changeMode = (mode) => {\r\n    switch(mode) {\r\n      case 'resizable': {\r\n        setSelectedEditingOption(EDITING_OPTIONS.resizable);\r\n        break;\r\n      }\r\n      case 'warpable': {\r\n        setSelectedEditingOption(EDITING_OPTIONS.warpable);\r\n        break;\r\n      }\r\n      default: break;\r\n    }\r\n  }\r\n\r\n  const undoClick = () => {\r\n    if (currentHistoryIndex - 1 >= 0) {\r\n      setTarget(null);\r\n      setElementsTree(store.history[currentHistoryIndex - 1], false);\r\n      // console.log(store.history);\r\n      // console.log(store.history[currentHistoryIndex - 1]);\r\n      // console.log(currentHistoryIndex - 1);\r\n      setCurrentHistoryIndex(currentHistoryIndex - 1);\r\n    }\r\n  }\r\n\r\n  const redoClick = () => {\r\n    if (currentHistoryIndex + 1 < store.history.length) {\r\n      setTarget(null);\r\n      setElementsTree(store.history[currentHistoryIndex + 1], false);\r\n      // console.log(store.history);\r\n      // console.log(store.history[currentHistoryIndex + 1]);\r\n      // console.log(currentHistoryIndex + 1);\r\n      setCurrentHistoryIndex(currentHistoryIndex + 1);\r\n    }\r\n  }\r\n\r\n  // let matrix = [\r\n  //   1, 0, 0, 0,\r\n  //   0, 1, 0, 0,\r\n  //   0, 0, 1, 0,\r\n  //   0, 0, 0, 1,\r\n  // ];\r\n\r\n\r\n  return (\r\n    <Container>\r\n      <PopupWrapper\r\n        isVisible={isPopupVisible}\r\n        onClick={() => {\r\n          setImgPopupVisibility(false);\r\n          setPopupVisibility(false);\r\n        }}\r\n      ></PopupWrapper>\r\n      <ImgPopup\r\n        src={imgPopupSrc}\r\n        isVisible={isImgPopupVisible}\r\n        alt=\"imgPopup\"\r\n      ></ImgPopup>\r\n      <Header></Header>\r\n      <BuilderContainer>\r\n        <TopSidebar\r\n          items={TOP_SIDEBAR_OPTIONS}\r\n          clickAction={handleTopbarOptions}\r\n          selectedTopbarOption={selectedTopbarOption}\r\n          layerClick={layerClick}\r\n          undoClick={undoClick}\r\n          redoClick={redoClick}\r\n          changeMode={changeMode}\r\n          deleteClick={() => deleteElement(target)}\r\n        />\r\n        <MainPart>\r\n          <MainSidebar\r\n            items={CATEGORIES}\r\n            clickAction={handleOptionClick}\r\n            selectedItem={selectedOption}\r\n            isMain={true}\r\n          />\r\n          {selectedOption && (\r\n            <ElementsSidebar\r\n              items={OPTIONS[selectedOption.tag]}\r\n              clickAction={handleCreateElement}\r\n              isMain={false}\r\n            />\r\n          )}\r\n          <Workspace>\r\n            <input\r\n              type=\"file\"\r\n              name=\"name\"\r\n              style={{ display: \"none\" }}\r\n              ref={(ref) => (fileInput = ref)}\r\n            />\r\n            <WorkAreaWrapper>\r\n              <WorkArea ref={(ref) => setWorkAreaRef(ref)}>\r\n                <Moveable\r\n                  target={target}\r\n                  container={workAreaRef}\r\n                  origin={true}\r\n                  /* Resize event edges */\r\n                  edge={false}\r\n                  /* draggable */\r\n                  draggable={true}\r\n                  throttleDrag={0}\r\n                  onDrag={({\r\n                    target,\r\n                    beforeDelta,\r\n                    beforeDist,\r\n                    left,\r\n                    top,\r\n                    right,\r\n                    bottom,\r\n                    delta,\r\n                    dist,\r\n                    transform,\r\n                    clientX,\r\n                    clientY,\r\n                  }) => {\r\n                    target.style.transform = transform;\r\n                  }}\r\n                  onDragEnd={({ target, isDrag, clientX, clientY }) => {\r\n                    addStyleToElementInTree(target);\r\n                  }}\r\n                  /* When resize or scale, keeps a ratio of the width, height. */\r\n                  keepRatio={false}\r\n                  /* resizable*/\r\n                  /* Only one of resizable, scalable, warpable can be used. */\r\n                  resizable={selectedEditingOption.resizable}\r\n                  throttleResize={0}\r\n                  onResizeStart={({ target, clientX, clientY }) => {\r\n                  }}\r\n                  onResize={({\r\n                    target,\r\n                    width,\r\n                    height,\r\n                    dist,\r\n                    delta,\r\n                    direction,\r\n                    clientX,\r\n                    clientY,\r\n                  }) => {\r\n                    delta[0] && (target.style.width = `${width}px`);\r\n                    delta[1] && (target.style.height = `${height}px`);\r\n                  }}\r\n                  onResizeEnd={({ target, isDrag, clientX, clientY }) => {\r\n                    addStyleToElementInTree(target);\r\n                  }}\r\n                  /* scalable */\r\n                  /* Only one of resizable, scalable, warpable can be used. */\r\n                  scalable={selectedEditingOption.scalable}\r\n                  throttleScale={0}\r\n                  onScale={({\r\n                    target,\r\n                    scale,\r\n                    dist,\r\n                    delta,\r\n                    transform,\r\n                    clientX,\r\n                    clientY,\r\n                  }) => {\r\n                    target.style.transform = transform;\r\n                  }}\r\n                  onScaleEnd={({ target, isDrag, clientX, clientY }) => {\r\n                    addStyleToElementInTree(target);\r\n                  }}\r\n                  /* rotatable */\r\n                  rotatable={true}\r\n                  throttleRotate={0}\r\n                  onRotate={({\r\n                    target,\r\n                    delta,\r\n                    dist,\r\n                    transform,\r\n                    clientX,\r\n                    clientY,\r\n                  }) => {\r\n                    target.style.transform = transform;\r\n                  }}\r\n                  onRotateEnd={({ target, isDrag, clientX, clientY }) => {\r\n                    addStyleToElementInTree(target);\r\n                  }}\r\n                  /* warpable */\r\n                  /* Only one of resizable, scalable, warpable can be used. */\r\n                  /*\r\n                this.matrix = [\r\n                    1, 0, 0, 0,\r\n                    0, 1, 0, 0,\r\n                    0, 0, 1, 0,\r\n                    0, 0, 0, 1,\r\n                ]\r\n                */\r\n                  warpable={selectedEditingOption.warpable}\r\n                  onWarp={({\r\n                    target,\r\n                    clientX,\r\n                    clientY,\r\n                    delta,\r\n                    dist,\r\n                    multiply,\r\n                    transform,\r\n                  }) => {\r\n                    // target.style.transform = transform;\r\n                    const el = elementsTree.find(e => e.id === target.id);\r\n                    let matrix = el.matrix;\r\n                    matrix = multiply(matrix, delta);\r\n                    // const rotate = target.style.transform;\r\n                    // const translate = target.style.transform;\r\n                    // console.log(rotate);\r\n                    target.style.transform = `matrix3d(${matrix.join(\r\n                      \",\"\r\n                    )})`;\r\n                  }}\r\n                  onWarpEnd={({ target, isDrag, clientX, clientY }) => {\r\n                    addStyleToElementInTree(target);\r\n                    console.log('yes');\r\n                  }}\r\n                  // Enabling pinchable lets you use events that\r\n                  // can be used in draggable, resizable, scalable, and rotateable.\r\n                  pinchable={true}\r\n                  onPinchEnd={({ isDrag, target, clientX, clientY, datas }) => {\r\n                    // pinchEnd event occur before dragEnd, rotateEnd, scaleEnd, resizeEnd\r\n                    addStyleToElementInTree(target);\r\n                  }}\r\n                />\r\n                {elementsTree.map((element) => {\r\n                  switch (element.HTMLTag) {\r\n                    case \"img\": {\r\n                      let id = element.id;\r\n                      let ref = null;\r\n                      return (\r\n                        <img\r\n                          src={element?.src}\r\n                          key={id}\r\n                          id={id}\r\n                          alt=\"userFile\"\r\n                          ref={(r) => {\r\n                            ref = r;\r\n                          }}\r\n                          onClick={() => {\r\n                            setTarget(ref);\r\n                            setTargetId(id);\r\n                          }}\r\n                          style={element.style}\r\n                        />\r\n                      );\r\n                    }\r\n                    case \"input\": {\r\n                      let id = element.id;\r\n                      let ref = null;\r\n                      return (\r\n                        <Input\r\n                          key={id}\r\n                          id={id}\r\n                          ref={(r) => {\r\n                            ref = r;\r\n                          }}\r\n                          defaultValue={element.value}\r\n                          onClick={() => {\r\n                            setTarget(ref);\r\n                            setTargetId(id);\r\n                            ref.focus();\r\n                          }}\r\n                          style={element.style}\r\n                        />\r\n                      );\r\n                    }\r\n                    case \"div-square\": {\r\n                      let id = element.id;\r\n                      let ref = null;\r\n                      return (\r\n                        <Square\r\n                          key={id}\r\n                          id={id}\r\n                          ref={(r) => {\r\n                            ref = r;\r\n                          }}\r\n                          onClick={() => {\r\n                            setTarget(ref);\r\n                            setTargetId(id);\r\n                          }}\r\n                          style={element.style}\r\n                        />\r\n                      );\r\n                    }\r\n                    case \"div-circle\": {\r\n                      let id = element.id;\r\n                      let ref = null;\r\n                      return (\r\n                        <Circle\r\n                          key={id}\r\n                          id={id}\r\n                          ref={(r) => {\r\n                            ref = r;\r\n                          }}\r\n                          onClick={() => {\r\n                            setTarget(ref);\r\n                            setTargetId(id);\r\n                          }}\r\n                          style={element.style}\r\n                        />\r\n                      );\r\n                    }\r\n                    default:\r\n                      break;\r\n                  }\r\n                  // return React.createElement(element.html.type, element.html.props);\r\n                })}\r\n                {/* <TestBlock ref={(ref) => setTarget(ref)}></TestBlock> */}\r\n              </WorkArea>\r\n            </WorkAreaWrapper>\r\n          </Workspace>\r\n        </MainPart>\r\n      </BuilderContainer>\r\n    </Container>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Header from \"../../common/components/Header/Header\";\r\nimport { Input, Button } from \"@material-ui/core\";\r\nimport { setCurrentProject, setProjects } from \"../../store/actions\";\r\nimport * as colors from \"../../common/constants/colors\";\r\n\r\n// import ChildComponent from './components/ChildComponent.jsx';\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-flow: column;\r\n`;\r\n\r\nconst ProjectsContainer = styled.div`\r\n  padding: 55px 25px;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst ProjectBlock = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 500px;\r\n  height: 280px;\r\n  margin-right: 80px;\r\n  margin-bottom: 25px;\r\n  color: white;\r\n  font-size: 28px;\r\n  font-weight: bold;\r\n  background-color: #7485be;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst AddProjectButton = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 190px;\r\n  height: 75px;\r\n  background-color: ${colors.main};\r\n  color: white;\r\n  margin-left: 25px;\r\n  cursor: pointer;\r\n\r\n  border-radius: 10px;\r\n`;\r\n\r\nconst PopupWrapper = styled.div`\r\n  background-color: gray;\r\n  position: fixed;\r\n  opacity: 0.9;\r\n  width: 100%;\r\n  height: 100%;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  z-index: 9999;\r\n  ${({ isVisible }) => (isVisible ? \"\" : \"display: none;\")}\r\n`;\r\n\r\nconst Popup = styled.div`\r\n  display: flex;\r\n  flex-flow: column;\r\n  align-items: center;\r\n  padding: 20px;\r\n  width: 200px;\r\n  border-radius: 10px;\r\n  background-color: white;\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  z-index: 10000;\r\n  ${({ isVisible }) => (isVisible ? \"\" : \"display: none;\")}\r\n`;\r\n\r\nconst mapStateToProps = (state) => ({\r\n  store: state,\r\n});\r\n\r\nexport default connect(mapStateToProps)(({ dispatch, store }) => {\r\n  let history = useHistory();\r\n  const [popup, setPopup] = React.useState(false);\r\n  const [projectName, setProjectName] = React.useState(\"\");\r\n\r\n  // React.useEffect(() => {\r\n  //   if (!store.accessToken) {\r\n  //     history.push(\"/\");\r\n  //   } else {\r\n  //     const body = JSON.stringify({\r\n  //       accessToken: store.accessToken,\r\n  //       username: store.username,\r\n  //     });\r\n  //     fetch(\"http://localhost:8080/api/user/getProjects\", {\r\n  //       method: \"POST\",\r\n  //       headers: {\r\n  //         \"Content-Type\": \"application/json;charset=utf-8\",\r\n  //       },\r\n  //       body,\r\n  //     }).then(async (response) => {\r\n  //       let data = await response.json();\r\n  //       dispatch(setProjects(\"SET_PROJECTS\", data.projects));\r\n  //     });\r\n  //   }\r\n  // }, []);\r\n\r\n  const setCurrentProject = (project) => {\r\n    const body = JSON.stringify({\r\n      accessToken: store.accessToken,\r\n      username: store.username,\r\n      projectId: project._id\r\n    });\r\n    fetch(\"http://localhost:8080/api/user/getProject\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json;charset=utf-8\",\r\n      },\r\n      body,\r\n    }).then(async (response) => {\r\n      let data = await response.json();\r\n      console.log(data);\r\n      dispatch(setCurrentProject(\"SET_CURRENT_PROJECT\", data.project));\r\n      history.push(\"/builder\");\r\n    });\r\n  };\r\n\r\n  const addProject = () => {\r\n    const body = JSON.stringify({\r\n      accessToken: store.accessToken,\r\n      username: store.username,\r\n      project: {\r\n        name: projectName,\r\n      },\r\n    });\r\n    fetch(\"http://localhost:8080/api/user/addProject\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json;charset=utf-8\",\r\n      },\r\n      body,\r\n    }).then(async (response) => {\r\n      let data = await response.json();\r\n      console.log(data);\r\n      dispatch(setProjects(\"SET_PROJECTS\", data.projects));\r\n      setProjectName(\"\");\r\n      setPopup(false);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <PopupWrapper isVisible={popup} onClick={() => setPopup(false)} />\r\n      <Popup isVisible={popup}>\r\n        <Input\r\n          placeholder=\"Название проекта\"\r\n          type=\"text\"\r\n          style={{ marginBottom: \"15px\" }}\r\n          value={projectName}\r\n          onChange={(e) => setProjectName(e.currentTarget.value)}\r\n        />\r\n        <Button\r\n          variant=\"contained\"\r\n          style={{\r\n            backgroundColor: colors.main,\r\n            color: \"white\",\r\n            width: \"100%\",\r\n          }}\r\n          onClick={addProject}\r\n        >\r\n          Создать проект\r\n        </Button>\r\n      </Popup>\r\n      <Header name=\"Профиль\" />\r\n      <ProjectsContainer>\r\n        {store.projects.map((project, id) => {\r\n          return (\r\n            <ProjectBlock\r\n              key={id}\r\n              onClick={() => {\r\n                setCurrentProject(project);\r\n              }}\r\n            >\r\n              {project?.name}\r\n            </ProjectBlock>\r\n          );\r\n        })}\r\n      </ProjectsContainer>\r\n      <AddProjectButton onClick={() => setPopup(true)}>\r\n        Добавить проект\r\n      </AddProjectButton>\r\n    </Wrapper>\r\n  );\r\n});\r\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport './App.css';\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\n\nimport reducers from \"./store/reducers\";\n\nimport Authorization from './pages/Authorization/Auth';\nimport Builder from './pages/Builder/Builder';\nimport Profile from './pages/Profile/Profile';\n\nconst store = createStore(reducers);\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router forceRefresh={false}>\n        <Switch>\n          <Route path=\"/authorization\" exact>\n            <Authorization />\n          </Route>\n          <Route path=\"/\" exact>\n            <Builder />\n          </Route>\n          <Route path=\"/profile\" exact>\n            <Profile />\n          </Route>\n          {/* <Route path=\"*\">\n            <ErrorPage />\n          </Route> */}\n        </Switch>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}